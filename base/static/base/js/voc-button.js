/**
 * This script adds a floating feedback button to the page with a certain probability.
 * If the button is clicked, it will not appear as often in the future.
 * The script adds the user's URL to the form's URL, which populates the feedback form.
 * Additionally, a feedback link is also added to the footer of the page.
 * This script was generated by an LLM(Claude 3.5 Sonnet) and reviewd by VMG.
 * 
 * Expected elements on the page:
 * - A footer with a list identified by 'aria-labelledby="contact_label"'
 * - The feedback button will be appended to the body if it exists
 */

document.addEventListener('DOMContentLoaded', function() {
    // URL for the feedback link
    const currentPageUrl = encodeURIComponent(window.location.href);
    // Location can be retrived by getting  coordinates from navigator.geolocation and converting to a physical location via an external service like https://geocode.xyz/.
    // This requires the user to grant permission for location access, which may impact usability.
    // Or we can obtain this from the IP address via an external service like https://ipapi.co/json/, which gives us a city, region, and country.   
    // This doesn't require user permission and might be done for free.
    // let userLocation = 'unk, unk, unk'; // Default values for City, State/Region, Country
    // let feedbackLinkUrl = 'https://chicagobooth.az1.qualtrics.com/jfe/form/SV_0Ul7ULLhiDnN90W?context_url=' + currentPageUrl;
    let feedbackLinkUrl = 'https://chicagobooth.az1.qualtrics.com/jfe/form/SV_0Ul7ULLhiDnN90W?context_url=' + currentPageUrl;

    // Check if the feedback button has been clicked before
    const hasClickedBefore = localStorage.getItem('feedbackButtonClicked') === 'true';
    // Set the probability of showing the feedback button based on previous clicks
    const showProbability = hasClickedBefore ? 0.1 : 0.8;

    // Show the feedback button
    if (Math.random() < showProbability) {
        // Create the feedback button element
        const button = document.createElement('a');
        button.href = feedbackLinkUrl;
        button.innerHTML = `<i class="fa fa-comment" aria-hidden="true"></i> feedback`;
        button.className = 'btn feedback-button';

        // Define the CSS styles for the feedback button
        const css = `
            .feedback-button {
                position: fixed;
                z-index: 9999999999999;
                background-color: #800000;
                color: white;
                border: none;
                cursor: pointer;
                text-decoration: none;
                display: flex;
                align-items: center;
                justify-content: center;
                font-family: Arial, sans-serif;
                right: 0;
                bottom: 15vh;
                padding: 15px 5px;
                border-radius: 0 4px 4px 0;
                writing-mode: vertical-lr;
                transform: rotate(180deg);
            }
            .feedback-button:hover {
                background-color: #570000;
                color: white;
                text-decoration: none;
            }

            .feedback-button i {
                transform: rotate(180deg);
                margin: 0 0 8px 0;
            }

            @media (min-width: 768px) {
                .feedback-button {
                    right: 200px;
                    bottom: 0;
                    padding: 10px 15px;
                    border-radius: 4px 4px 0 0;
                    flex-direction: row;
                    writing-mode: horizontal-tb;
                    transform: none;
                }

                .feedback-button i {
                    transform: none;
                    margin: 0 8px 0 0;
                }
            }
        `;

        const styleElement = document.createElement('style');
        styleElement.textContent = css;
        document.head.appendChild(styleElement);

        // Add an event listener to the button to mark it as clicked in localStorage
        button.addEventListener('click', function() {
            localStorage.setItem('feedbackButtonClicked', 'true');
        });

        // Append the feedback button to the body of the document
        document.body.appendChild(button);
    }

    // Add feedback link to the footer
    const footerList = document.querySelector('ul[aria-labelledby="contact_label"]');
    if (footerList) {
        // Create a list item and link for the feedback
        const feedbackListItem = document.createElement('li');
        const feedbackLink = document.createElement('a');
        feedbackLink.href = feedbackLinkUrl;
        feedbackLink.textContent = 'Feedback';
        feedbackLink.setAttribute('data-ga-category', 'footer-links');
        feedbackLink.setAttribute('data-ga-action', 'click');
        feedbackLink.setAttribute('data-ga-label', 'Contact > Feedback');
        feedbackListItem.appendChild(feedbackLink);
        // Append the feedback link to the footer list
        footerList.appendChild(feedbackListItem);
    }
});

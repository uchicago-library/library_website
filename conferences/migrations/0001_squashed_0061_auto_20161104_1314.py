# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-08 20:36
from __future__ import unicode_literals

import base.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.table_block.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    replaces = [('conferences', '0001_initial'), ('conferences', '0002_auto_20160202_1810'), ('conferences', '0003_conferencepagemainregistrationlinks_link_text'), ('conferences', '0004_auto_20160202_1858'), ('conferences', '0005_auto_20160202_2045'), ('conferences', '0006_conferencepageorganizers_conferencepagesponsors'), ('conferences', '0007_auto_20160202_2247'), ('conferences', '0008_auto_20160202_2251'), ('conferences', '0009_auto_20160202_2253'), ('conferences', '0010_auto_20160202_2255'), ('conferences', '0011_conferencesubpage_body'), ('conferences', '0012_auto_20160203_2233'), ('conferences', '0013_auto_20160204_1737'), ('conferences', '0014_auto_20160204_1757'), ('conferences', '0015_auto_20160204_1810'), ('conferences', '0016_auto_20160204_1828'), ('conferences', '0017_auto_20160205_1818'), ('conferences', '0018_auto_20160205_1849'), ('conferences', '0019_auto_20160205_1914'), ('conferences', '0020_auto_20160205_1921'), ('conferences', '0021_auto_20160205_1925'), ('conferences', '0022_auto_20160208_2015'), ('conferences', '0023_auto_20160307_2147'), ('conferences', '0024_auto_20160318_2123'), ('conferences', '0025_auto_20160318_2150'), ('conferences', '0026_auto_20160328_1905'), ('conferences', '0027_auto_20160602_1653'), ('conferences', '0028_auto_20160602_2028'), ('conferences', '0029_auto_20160609_2056'), ('conferences', '0030_auto_20160609_2105'), ('conferences', '0031_auto_20160609_2121'), ('conferences', '0032_auto_20160610_1600'), ('conferences', '0033_auto_20160616_1727'), ('conferences', '0034_auto_20160621_1858'), ('conferences', '0035_auto_20160623_1449'), ('conferences', '0036_auto_20160623_1934'), ('conferences', '0037_auto_20160624_1847'), ('conferences', '0038_auto_20160627_2019'), ('conferences', '0039_auto_20160628_2157'), ('conferences', '0040_auto_20160629_2118'), ('conferences', '0041_auto_20160629_2135'), ('conferences', '0042_auto_20160701_1505'), ('conferences', '0043_auto_20160702_1740'), ('conferences', '0044_auto_20160702_1751'), ('conferences', '0045_auto_20160702_1754'), ('conferences', '0046_auto_20160708_1033'), ('conferences', '0047_auto_20160819_1653'), ('conferences', '0048_auto_20160912_1227'), ('conferences', '0049_auto_20160912_1354'), ('conferences', '0050_auto_20160913_1024'), ('conferences', '0051_auto_20160920_1342'), ('conferences', '0052_auto_20160929_1632'), ('conferences', '0053_auto_20160930_1137'), ('conferences', '0054_auto_20160930_1327'), ('conferences', '0055_auto_20161014_1113'), ('conferences', '0056_auto_20161031_1131'), ('conferences', '0057_auto_20161031_1213'), ('conferences', '0058_conferencepage_secondary_branding_color'), ('conferences', '0059_auto_20161103_1418'), ('conferences', '0060_auto_20161103_1604'), ('conferences', '0061_auto_20161104_1314')]

    initial = True

    dependencies = [
        ('staff', '0000_manual_pre_initial'),
        ('wagtailcore', '0028_merge'),
        ('wagtaildocs', '0004_capitalizeverbose'),
        ('wagtailcore', '0023_alter_page_revision_on_delete_behaviour'),
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('wagtailimages', '0010_change_on_delete_behaviour'),
        ('units', '0000_manual_pre_initial'),
        ('public', '0031_auto_20160119_1942'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConferenceIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('start_sidebar_from_here', models.BooleanField(default=False)),
                ('show_sidebar', models.BooleanField(default=False)),
                ('last_reviewed', models.DateField(blank=True, null=True, verbose_name='Last Reviewed')),
                ('content_specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_content_specialist', to='staff.StaffPage')),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_editor', to='staff.StaffPage')),
                ('page_maintainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_maintainer', to='staff.StaffPage')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_related', to='units.UnitPage')),
                ('quicklinks', wagtail.fields.RichTextField(blank=True)),
                ('quicklinks_title', models.CharField(blank=True, max_length=100)),
                ('view_more_link', models.URLField(blank=True, default='', max_length=255)),
                ('view_more_link_label', models.CharField(blank=True, max_length=100)),
                ('display_hours_in_right_sidebar', models.BooleanField(default=False)),
                ('display_hierarchical_listing', models.BooleanField(default=False)),
                ('enable_index', models.BooleanField(default=False)),
                ('events_feed_url', models.URLField(blank=True, help_text='Link to a Tiny Tiny RSS Feed')),
                ('news_feed_url', models.URLField(blank=True, help_text='Link to a WordPress Feed from the Library News Site')),
                ('active_tag', models.CharField(blank=True, help_text='A WordPress tag name used for display purposes, e.g. "Library Kiosk"', max_length=30)),
                ('rich_text', wagtail.fields.RichTextField(blank=True, help_text='Should be a bulleted list or combination of h3 elements and bulleted lists')),
                ('rich_text_heading', models.CharField(blank=True, max_length=25)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ConferencePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('start_sidebar_from_here', models.BooleanField(default=False)),
                ('show_sidebar', models.BooleanField(default=False)),
                ('last_reviewed', models.DateField(blank=True, null=True, verbose_name='Last Reviewed')),
                ('sort_order', models.IntegerField(blank=True, default=0)),
                ('subtitle', models.CharField(blank=True, max_length=100)),
                ('tagline', models.CharField(blank=True, max_length=150)),
                ('branding_color', models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator(message='Please enter a hex color, e.g. #012043', regex='^#[a-zA-Z0-9]{6}$')])),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('inactive', models.BooleanField(default=False, help_text='Check this when the conference has transpired')),
                ('body', wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock())))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock()))))))),
                ('banner_image', models.ForeignKey(blank=True, help_text='Banners should be 1200xB pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('conference_logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('content_specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_content_specialist', to='staff.StaffPage')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_editor', to='staff.StaffPage')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_related', to='public.LocationPage')),
                ('page_maintainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_maintainer', to='staff.StaffPage')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_related', to='units.UnitPage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ConferenceSubPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('start_sidebar_from_here', models.BooleanField(default=False)),
                ('show_sidebar', models.BooleanField(default=False)),
                ('last_reviewed', models.DateField(blank=True, null=True, verbose_name='Last Reviewed')),
                ('content_specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_content_specialist', to='staff.StaffPage')),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_editor', to='staff.StaffPage')),
                ('page_maintainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_maintainer', to='staff.StaffPage')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_related', to='units.UnitPage')),
                ('body', wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html'))))),
                ('quicklinks', wagtail.fields.RichTextField(blank=True)),
                ('quicklinks_title', models.CharField(blank=True, max_length=100)),
                ('view_more_link', models.URLField(blank=True, default='', max_length=255)),
                ('view_more_link_label', models.CharField(blank=True, max_length=100)),
                ('display_hours_in_right_sidebar', models.BooleanField(default=False)),
                ('display_hierarchical_listing', models.BooleanField(default=False)),
                ('enable_index', models.BooleanField(default=False)),
                ('events_feed_url', models.URLField(blank=True, help_text='Link to a Tiny Tiny RSS Feed')),
                ('news_feed_url', models.URLField(blank=True, help_text='Link to a WordPress Feed from the Library News Site')),
                ('active_tag', models.CharField(blank=True, help_text='A WordPress tag name used for display purposes, e.g. "Library Kiosk"', max_length=30)),
                ('rich_text', wagtail.fields.RichTextField(blank=True, help_text='Should be a bulleted list or combination of h3 elements and bulleted lists')),
                ('rich_text_heading', models.CharField(blank=True, max_length=25)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ConferencePageMainRegistrationLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_registration', to='conferences.ConferencePage')),
                ('button_text', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Additional Registration Links',
                'verbose_name': 'Additional Registration Link',
            },
        ),
        migrations.CreateModel(
            name='ConferencePageOrganizers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('link_text', models.CharField(blank=True, max_length=255)),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizers', to='conferences.ConferencePage')),
            ],
            options={
                'verbose_name_plural': 'Sponsors',
                'verbose_name': 'Sponsor',
            },
        ),
        migrations.CreateModel(
            name='ConferencePageSponsors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('link_text', models.CharField(blank=True, max_length=255)),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsors', to='conferences.ConferencePage')),
            ],
            options={
                'verbose_name_plural': 'Sponsors',
                'verbose_name': 'Sponsor',
            },
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock())))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(blank=True, max_length=20)), ('link_external', wagtail.blocks.URLBlock(blank=True)), ('link_page', wagtail.blocks.PageChooserBlock(blank=True)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(blank=True))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock())))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(blank=True, max_length=20)), ('link_external', wagtail.blocks.URLBlock(blank=True)), ('link_page', wagtail.blocks.PageChooserBlock(blank=True, required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(blank=True, required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock())))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(blank=True, max_length=20)), ('link_external', wagtail.blocks.URLBlock(blank=True, required=False)), ('link_page', wagtail.blocks.PageChooserBlock(blank=True, required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(blank=True, required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock())))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StreamBlock((('start_time', wagtail.blocks.TimeBlock(required=False)), ('end_time', wagtail.blocks.TimeBlock(required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False))), label='event'), help_text='A talk or event with a title, presenter             room number, and description', icon='edit'))), icon='date', template='base/blocks/agenda.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False))), label='event'), help_text='A talk or event with a title, presenter             room number, and description', icon='edit'))), icon='date', template='base/blocks/agenda.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=''))), icon='date', template='base/blocks/agenda.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Subtle')])), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')))),
        ),
        migrations.RemoveField(
            model_name='conferencepage',
            name='inactive',
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='current',
            field=models.BooleanField(default=True, help_text='Uncheck this when the conference has transpired'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='facebook_page',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='hashtag',
            field=models.CharField(blank=True, max_length=45),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='hashtag_page',
            field=models.URLField(blank=True, help_text='Link to twitter page using a hashtag'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='twitter_page',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='secondary_registration_description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='secondary_registration_heading',
            field=models.CharField(blank=True, max_length=40),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], initial='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')))),
        ),
        migrations.CreateModel(
            name='ConferencePageSecondaryRegistrationLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('button_text', models.CharField(max_length=20)),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_registration', to='conferences.ConferencePage')),
            ],
            options={
                'verbose_name_plural': 'Additional Registration Links',
                'verbose_name': 'Additional Registration Link',
            },
        ),
        migrations.AlterModelOptions(
            name='conferencepagemainregistrationlinks',
            options={'verbose_name': 'Main Registration Link', 'verbose_name_plural': 'Main Registration Links'},
        ),
        migrations.AlterField(
            model_name='conferencepagemainregistrationlinks',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_registration', to='conferences.ConferencePage'),
        ),
        migrations.AlterField(
            model_name='conferencepagemainregistrationlinks',
            name='link_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document'),
        ),
        migrations.AlterField(
            model_name='conferencepagemainregistrationlinks',
            name='link_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='blog_page',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='instagram_page',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='snapchat_page',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='tumblr_page',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='youtube_page',
            field=models.URLField(blank=True),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='editor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_editor', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='page_maintainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_maintainer', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_related', to='units.UnitPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'})))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(required=False)), ('caption', wagtail.blocks.TextBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('table', wagtail.contrib.table_block.blocks.TableBlock(table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.CharBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')))),
        ),
        migrations.RemoveField(
            model_name='conferencepage',
            name='sort_order',
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='quicklinks',
            field=wagtail.fields.RichTextField(blank=True),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='quicklinks_title',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='view_more_link',
            field=models.URLField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='view_more_link_label',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='display_hours_in_right_sidebar',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='display_hierarchical_listing',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='enable_index',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='events_feed_url',
            field=models.URLField(blank=True, help_text='Link to a Tiny Tiny RSS Feed'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='news_feed_url',
            field=models.URLField(blank=True, help_text='Link to a wordpress feed from the Library News Site'),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='rich_text_link',
            field=models.ForeignKey(blank=True, help_text='Optional link that displays next to the heading', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='rich_text_link_text',
            field=models.CharField(blank=True, help_text='Display text for the rich text link', max_length=25),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='rich_text',
            field=wagtail.fields.RichTextField(blank=True, help_text='Should be a bulleted list or combination of h3 elements and bulleted lists'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='rich_text_heading',
            field=models.CharField(blank=True, max_length=25),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='rich_text_link',
            field=models.ForeignKey(blank=True, help_text='Optional link that displays next to the heading', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='rich_text_link_text',
            field=models.CharField(blank=True, help_text='Display text for the rich text link', max_length=25),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='rich_text_link',
            field=models.ForeignKey(blank=True, help_text='Optional link that displays next to the heading', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='rich_text_link_text',
            field=models.CharField(blank=True, help_text='Display text for the rich text link', max_length=25),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='rich_text_external_link',
            field=models.URLField(blank=True, help_text='Optional external link that displays next to the heading'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='rich_text_external_link',
            field=models.URLField(blank=True, help_text='Optional external link that displays next to the heading'),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='rich_text_external_link',
            field=models.URLField(blank=True, help_text='Optional external link that displays next to the heading'),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='change_to_callout',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='change_to_callout',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='change_to_callout',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(
            model_name='conferenceindexpage',
            name='active_tag',
        ),
        migrations.RemoveField(
            model_name='conferencesubpage',
            name='active_tag',
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='external_news_page',
            field=models.URLField(blank=True, help_text='Link to an external news page, e.g. wordpress'),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='internal_news_page',
            field=models.ForeignKey(blank=True, help_text='Link to an internal news page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='external_news_page',
            field=models.URLField(blank=True, help_text='Link to an external news page, e.g. wordpress'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='internal_news_page',
            field=models.ForeignKey(blank=True, help_text='Link to an internal news page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='external_news_page',
            field=models.URLField(blank=True, help_text='Link to an external news page, e.g. wordpress'),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='internal_news_page',
            field=models.ForeignKey(blank=True, help_text='Link to an internal news page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AlterField(
            model_name='conferenceindexpage',
            name='news_feed_url',
            field=models.URLField(blank=True, help_text='Link to a wordpress feed from the Library News Site'),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='news_feed_url',
            field=models.URLField(blank=True, help_text='Link to a wordpress feed from the Library News Site'),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='banner_image',
            field=models.ForeignKey(blank=True, help_text='Banners should be approximately 1200 × 200 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='banner_title',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='banner_title',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='banner_image',
            field=models.ForeignKey(blank=True, help_text='Banners should be approximately 1200 × 200 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='banner_title',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='banner_image',
            field=models.ForeignKey(blank=True, help_text='Banners should be approximately 1200 × 200 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='banner_subtitle',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='banner_subtitle',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='banner_subtitle',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_page', base.models.StaffPageChooserBlock(required=True)), ('show_photo', wagtail.blocks.BooleanBlock(default=False, help_text="Show this staff person's photograph.", required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialty', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='date', template='base/blocks/staff_listing.html')))),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_page', base.models.StaffPageChooserBlock(required=True)), ('show_photo', wagtail.blocks.BooleanBlock(default=False, help_text="Show this staff person's photograph.", required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialty', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='date', template='base/blocks/staff_listing.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='date', template='base/blocks/staff_listing.html')))),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='date', template='base/blocks/staff_listing.html')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')))),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')))),
        ),
        migrations.AddField(
            model_name='conferenceindexpage',
            name='banner_feature',
            field=models.ForeignKey(blank=True, help_text='Banner feature images should be approximately 500 × 500 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='banner_feature',
            field=models.ForeignKey(blank=True, help_text='Banner feature images should be approximately 500 × 500 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='conferencesubpage',
            name='banner_feature',
            field=models.ForeignKey(blank=True, help_text='Banner feature images should be approximately 500 × 500 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')))),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock((('image_one', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Second of two images displayed             side by side'))), help_text='Two images stacked side by side')))),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock((('image_one', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Second of two images displayed             side by side'))), help_text='Two images stacked side by side')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock((('image_one', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Second of two images displayed             side by side'))), help_text='Two images stacked side by side')))),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock((('image_one', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Second of two images displayed             side by side'))), help_text='Two images stacked side by side')))),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock((('image_one', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Second of two images displayed             side by side'))), help_text='Two images stacked side by side')))),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='body',
            field=wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock((('image_one', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Second of two images displayed             side by side'))), help_text='Two images stacked side by side')))),
        ),
        migrations.RemoveField(
            model_name='conferencepage',
            name='subtitle',
        ),
        migrations.RemoveField(
            model_name='conferencepage',
            name='tagline',
        ),
        migrations.RenameField(
            model_name='conferencepage',
            old_name='branding_color',
            new_name='primary_branding_color',
        ),
        migrations.AddField(
            model_name='conferencepage',
            name='secondary_branding_color',
            field=models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator(message='Please enter a hex color, e.g. #012043', regex='^#[a-zA-Z0-9]{6}$')]),
        ),
        migrations.AlterModelOptions(
            name='conferencepagemainregistrationlinks',
            options={'ordering': ['sort_order'], 'verbose_name': 'Main Registration Link', 'verbose_name_plural': 'Main Registration Links'},
        ),
        migrations.AlterModelOptions(
            name='conferencepageorganizers',
            options={'ordering': ['sort_order'], 'verbose_name': 'Organizer', 'verbose_name_plural': 'Organizers'},
        ),
        migrations.AlterModelOptions(
            name='conferencepagesecondaryregistrationlinks',
            options={'ordering': ['sort_order'], 'verbose_name': 'Additional Registration Link', 'verbose_name_plural': 'Additional Registration Links'},
        ),
        migrations.AlterModelOptions(
            name='conferencepagesponsors',
            options={'ordering': ['sort_order'], 'verbose_name': 'Sponsor', 'verbose_name_plural': 'Sponsors'},
        ),
        migrations.AlterField(
            model_name='conferenceindexpage',
            name='content_specialist',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_content_specialist', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferenceindexpage',
            name='editor',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_editor', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferenceindexpage',
            name='page_maintainer',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_maintainer', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='content_specialist',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_content_specialist', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='editor',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_editor', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='page_maintainer',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_maintainer', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='content_specialist',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_content_specialist', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='editor',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_editor', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='page_maintainer',
            field=models.ForeignKey(choices=[(44, 'Ricardo R Andrade'), (125, 'Jeffry D. Archer'), (85, 'Dean W. Armstrong'), (51, 'Dale Arntson'), (149, 'Kathleen Arthur'), (184, 'Melina Avery'), (1883, 'Shauna Babcock'), (54, 'Brian Balsamo'), (247, 'Terry Banks'), (55, 'Timothy Barnaby'), (177, 'Michelle B Bass'), (167, 'Linda Beezhold'), (205, 'Paul Belloni'), (82, 'David Bietila'), (71, 'Charles Blair'), (4906, 'Emma Boettcher'), (226, 'Steven Boozer'), (90, 'David Borycz'), (83, 'David W. Bottorff'), (225, 'Samuel B Brown'), (182, 'Michael D. Brown'), (99, 'Ellen Bryan'), (43, 'Amy M Buckland'), (211, 'Vicki Burwell-Rankin'), (56, 'Bradley Busenius'), (65, 'Maura Byrne'), (227, 'Sherry Byrne'), (134, 'John Carey'), (248, 'Timothy Clark'), (180, 'Miranda Clower'), (241, 'Steve Coats'), (66, 'Christine Colburn'), (102, 'Evelyn Collier'), (76, 'Kevin A Collier'), (77, 'James Collins'), (78, 'Christopher Cronin'), (250, 'Theodore Cueller'), (249, 'Tyler Danstrom'), (213, 'Renee Darosky'), (126, 'Judith Dartt'), (84, 'Dora Davis'), (235, 'Subrata De'), (86, 'Will Degenhard'), (228, 'Sean Dempsey'), (178, 'Melanie Dial'), (254, 'Thomas Dousa'), (255, 'Thomas Drueke'), (4835, 'Jennifer Dunlap'), (214, 'Ronald Durham'), (96, 'Elizabeth Edwards'), (68, 'Charles Ellington'), (186, 'Michael C Evans'), (201, 'Octavia Fallwell'), (88, 'David Farley'), (140, 'June P. Farris'), (152, 'Kathleen Feeney'), (69, 'Lily Fieg'), (229, 'Sean Filipov'), (179, 'M. Constance Fleischer'), (107, 'Greg Fleming'), (172, 'Lynn Franco'), (2469, 'David H Frankel'), (4815, 'Jennifer Frary'), (212, 'Raymond Gadke'), (148, 'Julia Gardner'), (252, 'Timothy Garrison'), (111, 'Joseph Gerdeman'), (204, 'Patti Gibbons'), (58, 'Barbara Gilbert'), (103, 'Fabian Gonzalez'), (52, 'Ashley Locke Gosselar'), (132, 'Jaymes B Grider'), (116, 'Gerald Hall'), (142, 'Jamal Hamilton'), (79, 'Catherine Hardy'), (232, 'Susan Harkins'), (89, 'Diana Rose Harper'), (118, 'Jamaar Harris'), (119, 'Jennifer Hart'), (166, 'Laurie Haugland'), (154, 'Kiku Hibino'), (4878, 'Taylor Hixson'), (110, 'Geraldine Hogue'), (98, 'Eileen Ielmini'), (253, 'Todd Ito'), (61, 'Brenda Johnson'), (70, 'Charlotte Jones'), (129, 'John Jung'), (135, 'John Kaderbek'), (4816, 'Kera Kelly'), (187, 'Mark Kennel'), (191, 'Michael Kenny'), (59, 'Barbara Kern'), (123, 'Hyerye Kim'), (131, 'Jenny Kim'), (42, 'Anne Knafl'), (207, 'Priya Kuppuraju'), (120, 'Hannah Landsman'), (236, 'Scott Landvatter'), (164, 'David K. Larsen'), (137, 'Jackie Larson'), (267, 'Simon Lee'), (39, 'Andrew D Lee'), (237, 'Sandra Levy'), (192, 'Melanie Levy'), (234, 'Sheri Lewis'), (46, 'Ann Lindsey'), (121, 'Holly Lipschultz'), (100, 'Elisabeth Long'), (168, 'Lyonette Louis-Jacques'), (41, 'Andrew John Lovdahl'), (57, 'Benita Luke'), (108, 'Grace Lyons'), (73, 'Cheryl Malmborg'), (113, 'Gary Mamlin'), (174, 'Amy Mantrone'), (74, 'Clint Marcy'), (175, 'Catherine M. Mardikes'), (158, 'Kristin E Martin'), (4967, 'Susan Martin'), (217, 'Renee Martonik'), (169, 'Janet L Mather'), (4834, 'Anita Marie Mechler'), (200, 'Edd Merkel'), (185, 'Stacey Metralexis'), (50, 'Daniel Meyer'), (130, 'Jon Miller'), (266, 'Yuan Mo'), (159, 'Kiya Moody'), (242, 'Steven Moore'), (189, 'James Mouw'), (75, 'Colleen Mullarkey'), (97, 'Erica Myles'), (269, 'Youli Na'), (62, 'Brittan Nannenga'), (219, 'Rose Navarro'), (2764, 'Olaf Nelson'), (87, 'Daryl Nelson'), (60, 'Benjamin Niespodziany'), (114, 'Greg Nimmo'), (139, 'James Nye'), (47, 'Adrianne Okoh'), (256, 'Tod Olson'), (265, 'Yasmin Omer'), (221, 'Ru Orb'), (48, 'Anderson Orsburn'), (196, 'Natascha Owens'), (128, 'Jee-Young Park'), (4833, 'Arnisha Parker'), (115, 'Gail Parks'), (124, 'James Anthony Patterson'), (243, 'Scott Perry'), (141, 'Julie Piacentine'), (49, 'Aaron Platte'), (222, 'Robert Pleshar'), (206, 'Laura Pontillo'), (91, 'Darryl Poole'), (160, 'Karen Prack'), (173, 'Mallory A Price'), (262, 'Bill Pugh'), (264, 'Xiaowen Qian'), (170, 'Liping Qin'), (209, 'Sheila Ralston'), (210, 'Emily Raney'), (216, 'Laura Ring'), (4842, 'Jason Robertson'), (223, 'Rachel Rosenberg'), (92, 'Darrin Rosenthal'), (45, 'Andrew Rusin'), (194, 'Marlis J. Saleh'), (208, 'Patricia Sayre-McCoy'), (109, 'George Schell'), (183, 'Margaret A. Schilt'), (260, 'William A. Schwesig'), (146, 'Joseph T Scott'), (104, 'Fred Seaton'), (143, 'James Server'), (198, 'Natasha Sharp'), (4879, 'Allyson E Smally'), (199, 'Nancy Spiegel'), (161, 'Kaitlin A Springmier'), (224, 'Rebecca Starkey'), (106, 'Julie R. Stauffer'), (80, 'Carol Stewart'), (244, 'Christopher Alexander Straughn'), (251, 'Teresa E Sullivan'), (1157, 'Sem C Sutter'), (144, 'James M. Swanson'), (93, 'Deborah Taylor'), (64, 'Brandon Tharp'), (72, 'Christie Thomas'), (101, 'Emily Anne Treptow'), (53, 'Andrea Twiss-Brooks'), (188, 'Marcene Tyler'), (81, 'Catherine Uecker'), (151, 'Keith Waclena'), (259, 'Larisa Walsh'), (176, 'Mary Lee Ward'), (231, 'Sarah G. Wenzel'), (94, 'Debra A Werner'), (171, 'Linda Wheatley-Irving'), (263, 'William White'), (190, 'Peggy Wilkins'), (112, "G'Jordan Williams"), (203, 'Patricia A. Williams'), (246, 'Shelia Wright-Coney'), (133, 'Jiaxun Benjamin Wu'), (127, 'Jin Xu'), (268, 'Ayako Yoshimura'), (163, 'Kathy Zadrozny'), (270, 'Yuan Zhou'), (271, 'Xiaoquan Zhu'), (5090, 'Karen Yu')], null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_maintainer', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferenceindexpage',
            name='content_specialist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_content_specialist', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferenceindexpage',
            name='editor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_editor', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferenceindexpage',
            name='page_maintainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferenceindexpage_maintainer', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='content_specialist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_content_specialist', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='editor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_editor', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencepage',
            name='page_maintainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencepage_maintainer', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='content_specialist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_content_specialist', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='editor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_editor', to='staff.StaffPage'),
        ),
        migrations.AlterField(
            model_name='conferencesubpage',
            name='page_maintainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conferences_conferencesubpage_maintainer', to='staff.StaffPage'),
        ),
    ]

# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-08 20:33
from __future__ import unicode_literals

import base.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.table_block.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    replaces = [('ask_a_librarian', '0001_initial'), ('ask_a_librarian', '0002_auto_20160307_2145'), ('ask_a_librarian', '0003_auto_20160307_2147'), ('ask_a_librarian', '0004_askpage_link_text'), ('ask_a_librarian', '0005_auto_20160310_2038'), ('ask_a_librarian', '0006_auto_20160328_1905'), ('ask_a_librarian', '0007_auto_20160602_1653'), ('ask_a_librarian', '0008_auto_20160602_2028'), ('ask_a_librarian', '0009_auto_20160609_2056'), ('ask_a_librarian', '0010_auto_20160609_2105'), ('ask_a_librarian', '0011_auto_20160609_2121'), ('ask_a_librarian', '0012_remove_askpage_sort_order'), ('ask_a_librarian', '0013_auto_20160616_1727'), ('ask_a_librarian', '0014_askpage_display_hours_in_right_sidebar'), ('ask_a_librarian', '0015_auto_20160623_1449'), ('ask_a_librarian', '0016_askpage_events_feed_url'), ('ask_a_librarian', '0017_auto_20160624_1847'), ('ask_a_librarian', '0018_askpage_news_feed_url'), ('ask_a_librarian', '0019_askpage_active_tag'), ('ask_a_librarian', '0020_auto_20160629_2118'), ('ask_a_librarian', '0021_askpage_rich_text_external_link'), ('ask_a_librarian', '0022_auto_20160630_1949'), ('ask_a_librarian', '0023_askpage_change_to_callout'), ('ask_a_librarian', '0024_remove_askpage_active_tag'), ('ask_a_librarian', '0025_auto_20160702_1751'), ('ask_a_librarian', '0026_auto_20160702_1754'), ('ask_a_librarian', '0027_auto_20160708_1033'), ('ask_a_librarian', '0028_askpage_banner_subtitle'), ('ask_a_librarian', '0029_auto_20160912_1227'), ('ask_a_librarian', '0030_auto_20160912_1354'), ('ask_a_librarian', '0031_auto_20160913_1024'), ('ask_a_librarian', '0032_askpage_banner_feature'), ('ask_a_librarian', '0033_auto_20160929_1632'), ('ask_a_librarian', '0034_auto_20160930_1137'), ('ask_a_librarian', '0035_auto_20160930_1327'), ('ask_a_librarian', '0036_auto_20161014_1113'), ('ask_a_librarian', '0037_auto_20161103_1604'), ('ask_a_librarian', '0038_auto_20161104_1314')]

    initial = True

    dependencies = [
        ('units', '0000_manual_pre_initial'),
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('staff', '0000_manual_pre_initial'),
        ('wagtailcore', '0023_alter_page_revision_on_delete_behaviour'),
        ('wagtaildocs', '0004_capitalizeverbose'),
        ('wagtailcore', '0028_merge'),
    ]

    operations = [
        migrations.CreateModel(
            name='AskPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('email_label', models.CharField(blank=True, max_length=254)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_label', models.CharField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=12, validators=[django.core.validators.RegexValidator(message='Please enter the phone number using the format 773-123-4567', regex='^[0-9]{3}-[0-9]{3}-[0-9]{4}$')])),
                ('start_sidebar_from_here', models.BooleanField(default=False)),
                ('show_sidebar', models.BooleanField(default=False)),
                ('last_reviewed', models.DateField(blank=True, null=True, verbose_name='Last Reviewed')),
                ('ask_widget_name', models.CharField(blank=True, max_length=100)),
                ('reference_resources', wagtail.fields.RichTextField(blank=True)),
                ('body', wagtail.fields.StreamField((('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock((('paragraph', wagtail.blocks.RichTextBlock()),))), ('image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))), label='Image')), ('blockquote', wagtail.blocks.StructBlock((('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))))), ('button', wagtail.blocks.StructBlock((('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')], default='btn-primary')), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))))), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock((('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())))), ('agenda_item', wagtail.blocks.StructBlock((('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock((('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)))), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))), icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock(())), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'contextMenu': True, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock((('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))), icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock((('image_one', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))), help_text='Second of two images displayed             side by side'))), help_text='Two images stacked side by side'))))),
                ('content_specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ask_a_librarian_askpage_content_specialist', to='staff.StaffPage')),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ask_a_librarian_askpage_editor', to='staff.StaffPage')),
                ('page_maintainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ask_a_librarian_askpage_maintainer', to='staff.StaffPage')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ask_a_librarian_askpage_related', to='units.UnitPage')),
                ('fax_number', models.CharField(blank=True, max_length=12, validators=[django.core.validators.RegexValidator(message='Please enter the phone number using the format 773-123-4567', regex='^[0-9]{3}-[0-9]{3}-[0-9]{4}$')])),
                ('link_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
                ('link_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('link_text', models.CharField(blank=True, max_length=255)),
                ('quicklinks', wagtail.fields.RichTextField(blank=True)),
                ('quicklinks_title', models.CharField(blank=True, max_length=100)),
                ('view_more_link', models.URLField(blank=True, default='', max_length=255)),
                ('view_more_link_label', models.CharField(blank=True, max_length=100)),
                ('display_hours_in_right_sidebar', models.BooleanField(default=False)),
                ('display_hierarchical_listing', models.BooleanField(default=False)),
                ('enable_index', models.BooleanField(default=False)),
                ('events_feed_url', models.URLField(blank=True, help_text='Link to a Tiny Tiny RSS Feed')),
                ('news_feed_url', models.URLField(blank=True, help_text='Link to a wordpress feed from the Library News Site')),
                ('rich_text', wagtail.fields.RichTextField(blank=True, help_text='Should be a bulleted list or combination of h3 elements and bulleted lists')),
                ('rich_text_heading', models.CharField(blank=True, max_length=25)),
                ('rich_text_link', models.ForeignKey(blank=True, help_text='Optional link that displays next to the heading', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('rich_text_link_text', models.CharField(blank=True, help_text='Display text for the rich text link', max_length=25)),
                ('rich_text_external_link', models.URLField(blank=True, help_text='Optional external link that displays next to the heading')),
                ('schedule_appointment_page', models.ForeignKey(blank=True, help_text='Link to a contact form', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('secondary_phone_number', models.CharField(blank=True, max_length=12, validators=[django.core.validators.RegexValidator(message='Please enter the phone number using the format 773-123-4567', regex='^[0-9]{3}-[0-9]{3}-[0-9]{4}$')])),
                ('visit_page', models.ForeignKey(blank=True, help_text='Link to a location or hours page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('change_to_callout', models.BooleanField(default=False)),
                ('external_news_page', models.URLField(blank=True, help_text='Link to an external news page, e.g. wordpress')),
                ('internal_news_page', models.ForeignKey(blank=True, help_text='Link to an internal news page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('banner_image', models.ForeignKey(blank=True, help_text='Banners should be approximately 1200 × 200 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('banner_title', models.CharField(blank=True, max_length=100)),
                ('banner_subtitle', models.CharField(blank=True, max_length=100)),
                ('banner_feature', models.ForeignKey(blank=True, help_text='Banner feature images should be approximately 500 × 500 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
    ]

# Generated by Django 2.0.12 on 2019-07-10 17:08

import base.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.contrib.table_block.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('staff', '0020_auto_20190529_1529'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('units', '0012_auto_20181019_1542'),
        ('wagtailimages', '0001_squashed_0021'),
    ]

    operations = [
        migrations.CreateModel(
            name='LibNewsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('start_sidebar_from_here', models.BooleanField(default=False)),
                ('show_sidebar', models.BooleanField(default=False)),
                ('last_reviewed', models.DateField(blank=True, null=True, verbose_name='Last Reviewed')),
                ('quicklinks', wagtail.fields.RichTextField(blank=True)),
                ('quicklinks_title', models.CharField(blank=True, max_length=100)),
                ('view_more_link', models.URLField(blank=True, default='', max_length=255)),
                ('view_more_link_label', models.CharField(blank=True, max_length=100)),
                ('change_to_callout', models.BooleanField(default=False)),
                ('display_hours_in_right_sidebar', models.BooleanField(default=False)),
                ('enable_index', models.BooleanField(default=False)),
                ('display_hierarchical_listing', models.BooleanField(default=False)),
                ('events_feed_url', models.URLField(blank=True, help_text='Link to a Tiny Tiny RSS Feed')),
                ('banner_title', models.CharField(blank=True, max_length=100)),
                ('banner_subtitle', models.CharField(blank=True, max_length=100)),
                ('news_feed_url', models.URLField(blank=True, help_text='Link to a wordpress feed from the Library News Site')),
                ('external_news_page', models.URLField(blank=True, help_text='Link to an external news page, e.g. wordpress')),
                ('rich_text_heading', models.CharField(blank=True, max_length=25)),
                ('rich_text', wagtail.fields.RichTextField(blank=True, help_text='Should be a bulleted list or combination of h3 elements and bulleted lists')),
                ('rich_text_external_link', models.URLField(blank=True, help_text='Optional external link that displays next to the heading')),
                ('rich_text_link_text', models.CharField(blank=True, help_text='Display text for the rich text link', max_length=25)),
                ('display_current_web_exhibits', models.BooleanField(default=False)),
                ('contacts', wagtail.fields.StreamField([('contact', wagtail.blocks.StructBlock([('contact_person', wagtail.blocks.PageChooserBlock(help_text='Select a StaffPage (not a StaffPublicPage)', page_type=['staff.StaffPage'], required=False))], icon='view', required=False, template='public/blocks/contact.html'))], default=[])),
                ('banner_feature', models.ForeignKey(blank=True, help_text='Banner feature images should be approximately 500 × 500 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('banner_image', models.ForeignKey(blank=True, help_text='Banners should be approximately 1200 × 200 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('content_specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewsindexpage_content_specialist', to='staff.StaffPage')),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewsindexpage_editor', to='staff.StaffPage')),
                ('fallback_image', models.ForeignKey(blank=True, help_text='Image to be used in browse display         when no thumbnail is provided', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='LibNewsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('start_sidebar_from_here', models.BooleanField(default=False)),
                ('show_sidebar', models.BooleanField(default=False)),
                ('last_reviewed', models.DateField(blank=True, null=True, verbose_name='Last Reviewed')),
                ('quicklinks', wagtail.fields.RichTextField(blank=True)),
                ('quicklinks_title', models.CharField(blank=True, max_length=100)),
                ('view_more_link', models.URLField(blank=True, default='', max_length=255)),
                ('view_more_link_label', models.CharField(blank=True, max_length=100)),
                ('change_to_callout', models.BooleanField(default=False)),
                ('display_hours_in_right_sidebar', models.BooleanField(default=False)),
                ('enable_index', models.BooleanField(default=False)),
                ('display_hierarchical_listing', models.BooleanField(default=False)),
                ('events_feed_url', models.URLField(blank=True, help_text='Link to a Tiny Tiny RSS Feed')),
                ('banner_title', models.CharField(blank=True, max_length=100)),
                ('banner_subtitle', models.CharField(blank=True, max_length=100)),
                ('news_feed_url', models.URLField(blank=True, help_text='Link to a wordpress feed from the Library News Site')),
                ('external_news_page', models.URLField(blank=True, help_text='Link to an external news page, e.g. wordpress')),
                ('rich_text_heading', models.CharField(blank=True, max_length=25)),
                ('rich_text', wagtail.fields.RichTextField(blank=True, help_text='Should be a bulleted list or combination of h3 elements and bulleted lists')),
                ('rich_text_external_link', models.URLField(blank=True, help_text='Optional external link that displays next to the heading')),
                ('rich_text_link_text', models.CharField(blank=True, help_text='Display text for the rich text link', max_length=25)),
                ('display_current_web_exhibits', models.BooleanField(default=False)),
                ('body', wagtail.fields.StreamField([('h2', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h2.html')), ('h3', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h3.html')), ('h4', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h4.html')), ('h5', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h5.html')), ('h6', wagtail.blocks.CharBlock(classname='title', icon='title', template='base/blocks/h6.html')), ('paragraph', wagtail.blocks.StructBlock([('paragraph', wagtail.blocks.RichTextBlock())])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(required=False)), ('citation', wagtail.blocks.CharBlock(help_text='Photographer, artist, or creator of image', required=False)), ('caption', wagtail.blocks.TextBlock(help_text='Details about or description of image', required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('alignment', base.models.ImageFormatChoiceBlock()), ('source', wagtail.blocks.URLBlock(help_text='Link to image source (needed for Creative Commons)', required=False)), ('lightbox', wagtail.blocks.BooleanBlock(default=False, help_text='Link to a larger version of the image', required=False))], label='Image')), ('blockquote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock('quote title')), ('attribution', wagtail.blocks.CharBlock(required=False))])), ('pullquote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.RichTextBlock())])), ('button', wagtail.blocks.StructBlock([('button_type', wagtail.blocks.ChoiceBlock(choices=[('btn-primary', 'Primary'), ('btn-default', 'Secondary'), ('btn-reserve', 'Reservation')])), ('button_text', wagtail.blocks.CharBlock(max_length=20)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))])), ('video', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('code', wagtail.blocks.StructBlock([('language', wagtail.blocks.ChoiceBlock(choices=[('bash', 'Bash/Shell'), ('css', 'CSS'), ('html', 'HTML'), ('javascript', 'Javascript'), ('json', 'JSON'), ('ocaml', 'OCaml'), ('php5', 'PHP'), ('html+php', 'PHP/HTML'), ('python', 'Python'), ('scss', 'SCSS'), ('yaml', 'YAML')])), ('code', wagtail.blocks.TextBlock())])), ('agenda_item', wagtail.blocks.StructBlock([('start_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('end_time', wagtail.blocks.TimeBlock(icon='time', required=False)), ('session_title', wagtail.blocks.CharBlock(help_text='Title of the session.             Can be used as title of the talk in some situations.', icon='title', required=False)), ('event', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Talk title, workshop title, etc.', required=False)), ('presenters', wagtail.blocks.CharBlock(help_text='Comma separated list of presenters             (if more than one)', required=False)), ('room_number', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False))]), help_text='A talk or event with a title, presenter             room number, and description', icon='edit', label=' '))], icon='date', template='base/blocks/agenda.html')), ('clear', wagtail.blocks.StructBlock([])), ('table', wagtail.contrib.table_block.blocks.TableBlock(help_text='Right + click in a table cell for more options. Use <em>text</em> for italics, <strong>text</strong> for bold, and <a href="https://duckduckgo.com">text</a> for links.', table_options={'autoColumnSize': False, 'colHeaders': False, 'editor': 'text', 'height': 108, 'language': 'en', 'minSpareRows': 0, 'renderer': 'html', 'rowHeaders': False, 'startCols': 3, 'startRows': 3, 'stretchH': 'all'}, template='base/blocks/table.html')), ('staff_listing', wagtail.blocks.StructBlock([('staff_listing', wagtail.blocks.ListBlock(wagtail.blocks.PageChooserBlock(), help_text='Be sure to select staff pages from Loop.', icon='edit', label='Staff listing')), ('show_photos', wagtail.blocks.BooleanBlock(default=False, help_text='Show staff photographs.', required=False)), ('show_contact_info', wagtail.blocks.BooleanBlock(default=False, help_text='Show contact information.', required=False)), ('show_subject_specialties', wagtail.blocks.BooleanBlock(default=False, help_text='Show subject specialties.', required=False))], icon='group', template='base/blocks/staff_listing.html')), ('solo_image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))], help_text='Single image with caption on the right')), ('duo_image', wagtail.blocks.StructBlock([('image_one', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))], help_text='First of two images displayed             side by side')), ('image_two', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('citation', wagtail.blocks.RichTextBlock(blank=True, null=True)), ('caption', wagtail.blocks.RichTextBlock(blank=True, null=True, required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False))], help_text='Second of two images displayed             side by side'))], help_text='Two images stacked side by side')), ('image_link', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('alt_text', wagtail.blocks.CharBlock(help_text='Invisible text for screen readers', required=False)), ('icon', wagtail.blocks.CharBlock(help_text="Font Awesome icon name if you're not using an image", required=False)), ('link_text', wagtail.blocks.CharBlock(help_text='Text to display below the image or icon', required=False)), ('link_external', wagtail.blocks.URLBlock(required=False)), ('link_page', wagtail.blocks.PageChooserBlock(required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(required=False))], help_text='A fancy link made out of a thumbnail and simple text')), ('local_media', base.models.LocalMediaBlock(help_text='Audio or video files that are locally hosted'))])),
                ('alt_text', models.CharField(blank=True, max_length=100)),
                ('is_feature_story', models.BooleanField(default=False)),
                ('excerpt', wagtail.fields.RichTextField(blank=True)),
                ('related_exhibits', wagtail.fields.StreamField([('exhibit', wagtail.blocks.StructBlock([('exhibit', wagtail.blocks.PageChooserBlock(help_text='Select an ExhibitPage', page_type=['lib_collections.ExhibitPage'], required=False))], icon='view', required=False, template='public/blocks/related_exhibit.html'))], default=[])),
                ('by_text_box', models.CharField(blank=True, max_length=200)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('banner_feature', models.ForeignKey(blank=True, help_text='Banner feature images should be approximately 500 × 500 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('banner_image', models.ForeignKey(blank=True, help_text='Banners should be approximately 1200 × 200 pixels', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('by_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='staff.StaffPage')),
                ('by_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='units.UnitPage')),
                ('content_specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewspage_content_specialist', to='staff.StaffPage')),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewspage_editor', to='staff.StaffPage')),
                ('internal_news_page', models.ForeignKey(blank=True, help_text='Link to an internal news page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('page_maintainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewspage_maintainer', to='staff.StaffPage')),
                ('rich_text_link', models.ForeignKey(blank=True, help_text='Optional link that displays next to the heading', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
                ('thumbnail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('unit', models.ForeignKey(limit_choices_to={'display_in_dropdown': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewspage_related', to='units.UnitPage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='LibNewsPageCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicNewsCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Public News Category',
                'verbose_name_plural': 'Public News Categories',
            },
            bases=(models.Model, wagtail.search.index.Indexed),
        ),
        migrations.AddField(
            model_name='libnewspagecategories',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='lib_news.PublicNewsCategories'),
        ),
        migrations.AddField(
            model_name='libnewspagecategories',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='lib_news_categories', to='lib_news.LibNewsPage'),
        ),
        migrations.AddField(
            model_name='libnewsindexpage',
            name='internal_news_page',
            field=models.ForeignKey(blank=True, help_text='Link to an internal news page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='libnewsindexpage',
            name='page_maintainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewsindexpage_maintainer', to='staff.StaffPage'),
        ),
        migrations.AddField(
            model_name='libnewsindexpage',
            name='rich_text_link',
            field=models.ForeignKey(blank=True, help_text='Optional link that displays next to the heading', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='libnewsindexpage',
            name='unit',
            field=models.ForeignKey(limit_choices_to={'display_in_dropdown': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_news_libnewsindexpage_related', to='units.UnitPage'),
        ),
    ]
